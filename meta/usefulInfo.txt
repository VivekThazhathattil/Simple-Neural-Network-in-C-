> Each circle takes in the following input:
	* Location of the nearest three cells (If there isn't that many set the missing input to value more than the size of the bounding box.
	* radius of the nearest three cells (if there aren't that many radii inputs, set the remaining radii to 0)
	* shortest distance to all the walls ( Each wall is defined by a line. So a typical rectangular wall essentially mean four walls {for each sides})
	* distance to the closest three pellets

> Outputs for each circle is of the form:
	* escape/evade mode : -1 for escape and +1 for evade (just for logging on screen) [useless as of now]
	* a direction : this value will vary from -1 to 1 as well and its interpretation is as follows:
		each circle has a pointing direction. Its velocity is something which it cannot control. 
		

Fitness function

> Revised inputs:
	* 6 x (pos of 3 nearby bodies : x & y coords)
	* 6 x (pos of 3 nearby pellets : x & y coords)
	* 8 x (pos of 4 walls)
	* 2 x (pos of present body)
	* 1 x (radii of present body)
	* 3 x (radii of 3 nearby bodies)
		total = 26 (+ 1 bias neuron)
> revised output:
	* 1 x rotation angle (that will modify velocityDir)

one hidden layer no. of neurons = avg(num_input, num_output) = 29/2 ~ 15
